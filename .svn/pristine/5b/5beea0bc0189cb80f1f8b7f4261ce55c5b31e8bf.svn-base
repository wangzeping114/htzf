using System;
using System.IO;
using System.Threading.Tasks;
using WS.HTZF.Application.Resources;
using WS.HTZF.Utilities.Helper;

namespace WS.HTZF.Application.Services
{
    /// <summary>
    /// 文件上传服务
    /// </summary>
    public class FileService
    {
        /// <summary>
        /// 文件上传
        /// </summary>
        /// <param name="filePath">本地存储的文件路径 比如:images/ rar/ common/等</param>
        /// <param name="fileExt">后缀名</param>
        /// <param name="bytes">字节</param>
        /// <returns></returns>
        public async Task<FileUploadResult> UploadFileAsync(string filePath, string fileExt, byte[] bytes)
        {

            string tempfile = $"{Guid.NewGuid().ToString()}{fileExt}";

            var rootPath = Path.Combine(AppContext.BaseDirectory, "Uploads");

            if (!Directory.Exists(rootPath))
            {
                Directory.CreateDirectory(rootPath);
            }

            var localPath = Path.Combine(rootPath, tempfile);

            File.WriteAllBytes(localPath, bytes);

            string contentMd5 = SecurityHelper.ComputeContentMd5(localPath);

            //var ossFileName = $"{filePath}/{contentMd5}{fileExt}";
            //var fileURL = await _aliyunOssService.OssServiceUpload(ossFileName, localPath);
            //File.Delete(localPath);
        

            return new FileUploadResult()
            {
                FileSize = bytes.Length,

                FileURL = "",

                Md5Hash = contentMd5
            };
        }
    }
}
